{
  "version": "1.1",
  "engine": "darwin|Transformer|1.40.0|a4bb798922820523fceedb9121f5bcfdfc9f2901|2023-01-15_09:45:25PM",
  "containerized": false,
  "host_distro": {
    "name": "",
    "version": "",
    "display_name": "other"
  },
  "type": "build",
  "state": "error",
  "target_reference": "nginxdemos/hello:latest",
  "system": {
    "type": "",
    "release": "",
    "distro": {
      "name": "",
      "version": "",
      "display_name": ""
    }
  },
  "source_image": {
    "identity": {
      "id": ""
    },
    "size": 0,
    "size_human": "",
    "create_time": "",
    "docker_version": "",
    "architecture": "",
    "container_entry": {
      "exe_path": ""
    }
  },
  "minified_image_size": 0,
  "minified_image_size_human": "",
  "minified_image": "",
  "minified_image_has_data": false,
  "minified_by": 0,
  "artifact_location": "",
  "container_report_name": "",
  "seccomp_profile_name": "",
  "apparmor_profile_name": "",
  "image_stack": [
    {
      "is_top_image": true,
      "id": "sha256:b6043a982a72452eef0405bceb2ea23129de05ccd0afa659238a8914de98fe3d",
      "full_name": "nginxdemos/hello:latest",
      "repo_name": "nginxdemos/hello",
      "version_tag": "latest",
      "raw_tags": [
        "nginxdemos/hello:latest"
      ],
      "create_time": "2023-02-12T01:32:35Z",
      "new_size": 40277265,
      "new_size_human": "40 MB",
      "instructions": [
        {
          "type": "ADD",
          "time": "2023-02-10T21:24:08Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 7458929,
          "size_human": "7.5 MB",
          "params": "file:9bd9ea42a9f3bdc769e80c6b8a4b117d65f73ae68e155a6172a1184e7ac8bcc1 in /",
          "command_snippet": "ADD file:9bd9ea42a9f3bdc769e80c6b8a4b117d65f...",
          "command_all": "ADD file:9bd9ea42a9f3bdc769e80c6b8a4b117d65f73ae68e155a6172a1184e7ac8bcc1 /",
          "target": "/",
          "source_type": "file",
          "inst_set_time_bucket": "2023-02-10T22:15:00+01:00"
        },
        {
          "type": "CMD",
          "time": "2023-02-10T21:24:08Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/bin/sh\"]\n",
          "command_snippet": "CMD [\"/bin/sh\"]\n",
          "command_all": "CMD [\"/bin/sh\"]\n",
          "inst_set_time_bucket": "2023-02-10T22:15:00+01:00"
        },
        {
          "type": "LABEL",
          "time": "2023-02-10T23:06:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
          "command_snippet": "LABEL maintainer=NGINX Docker Maintainers <d...",
          "command_all": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-02-10T23:06:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "NGINX_VERSION=1.23.3",
          "command_snippet": "ENV NGINX_VERSION=1.23.3",
          "command_all": "ENV NGINX_VERSION=1.23.3",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-02-10T23:06:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PKG_RELEASE=1",
          "command_snippet": "ENV PKG_RELEASE=1",
          "command_all": "ENV PKG_RELEASE=1",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 4563250,
          "size_human": "4.6 MB",
          "command_snippet": "RUN set -x && \\\n\taddgroup -g 101 -S nginx &&...",
          "command_all": "RUN set -x && \\\n\taddgroup -g 101 -S nginx && \\\n\tadduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx && \\\n\tapkArch=\"$(cat /etc/apk/arch)\" && \\\n\tnginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \" && \\\n\tapk add --no-cache --virtual .checksum-deps         openssl && \\\n\tcase \"$apkArch\" in         x86_64|aarch64)             set -x && \\\n\tKEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\" && \\\n\twget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub && \\\n\tif echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi && \\\n\tapk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x && \\\n\ttempDir=\"$(mktemp -d)\" && \\\n\tchown nobody:nobody $tempDir && \\\n\tapk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils && \\\n\tsu nobody -s /bin/sh -c \"                 export HOME=${tempDir} && \\\n\tcd ${tempDir} && \\\n\tcurl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tPKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\" && \\\n\tif [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi && \\\n\ttar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tcd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE} && \\\n\tcd alpine && \\\n\tmake base && \\\n\tapk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk && \\\n\tabuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \" && \\\n\tcp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ && \\\n\tapk del .build-deps && \\\n\tapk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac && \\\n\tapk del .checksum-deps && \\\n\tif [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi && \\\n\tif [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi && \\\n\tif [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi && \\\n\tapk add --no-cache --virtual .gettext gettext && \\\n\tmv /usr/bin/envsubst /tmp/ && \\\n\trunDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\" && \\\n\tapk add --no-cache $runDeps && \\\n\tapk del .gettext && \\\n\tmv /tmp/envsubst /usr/local/bin/ && \\\n\tapk add --no-cache tzdata && \\\n\tln -sf /dev/stdout /var/log/nginx/access.log && \\\n\tln -sf /dev/stderr /var/log/nginx/error.log && \\\n\tmkdir /docker-entrypoint.d",
          "system_commands": [
            "set -x",
            "addgroup -g 101 -S nginx",
            "adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx",
            "apkArch=\"$(cat /etc/apk/arch)\"",
            "nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"",
            "apk add --no-cache --virtual .checksum-deps         openssl",
            "case \"$apkArch\" in         x86_64|aarch64)             set -x",
            "KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"",
            "wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub",
            "if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi",
            "apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x",
            "tempDir=\"$(mktemp -d)\"",
            "chown nobody:nobody $tempDir",
            "apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils",
            "su nobody -s /bin/sh -c \"                 export HOME=${tempDir}",
            "cd ${tempDir}",
            "curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "PKGOSSCHECKSUM=\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\"",
            "if [ \"$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\" = \"$PKGOSSCHECKSUM\" ]; then                     echo \"pkg-oss tarball checksum verification succeeded!\";                 else                     echo \"pkg-oss tarball checksum verification failed!\";                     exit 1;                 fi",
            "tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}",
            "cd alpine",
            "make base",
            "apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk",
            "abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"",
            "cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/",
            "apk del .build-deps",
            "apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac",
            "apk del .checksum-deps",
            "if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi",
            "if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi",
            "if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi",
            "apk add --no-cache --virtual .gettext gettext",
            "mv /usr/bin/envsubst /tmp/",
            "runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"",
            "apk add --no-cache $runDeps",
            "apk del .gettext",
            "mv /tmp/envsubst /usr/local/bin/",
            "apk add --no-cache tzdata",
            "ln -sf /dev/stdout /var/log/nginx/access.log",
            "ln -sf /dev/stderr /var/log/nginx/error.log",
            "mkdir /docker-entrypoint.d"
          ],
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "COPY",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1616,
          "size_human": "1.6 kB",
          "params": "file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in /",
          "command_snippet": "COPY file:7b307b62e82255f040c9812421a30090bf...",
          "command_all": "COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 /",
          "target": "/",
          "source_type": "file",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "COPY",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 2123,
          "size_human": "2.1 kB",
          "params": "file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d",
          "command_snippet": "COPY file:5c18272734349488bd0c94ec8d382c872c...",
          "command_all": "COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb /docker-entrypoint.d",
          "target": "/docker-entrypoint.d",
          "source_type": "file",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "COPY",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1273,
          "size_human": "1.3 kB",
          "params": "file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d",
          "command_snippet": "COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e...",
          "command_all": "COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a /docker-entrypoint.d",
          "target": "/docker-entrypoint.d",
          "source_type": "file",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "COPY",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 4621,
          "size_human": "4.6 kB",
          "params": "file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d",
          "command_snippet": "COPY file:e57eef017a414ca793499729d80a7b9075...",
          "command_all": "COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf /docker-entrypoint.d",
          "target": "/docker-entrypoint.d",
          "source_type": "file",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENTRYPOINT",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/docker-entrypoint.sh\"]\n",
          "command_snippet": "ENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
          "command_all": "ENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "EXPOSE",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "80",
          "command_snippet": "EXPOSE 80",
          "command_all": "EXPOSE 80",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "STOPSIGNAL",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "SIGQUIT",
          "command_snippet": "STOPSIGNAL SIGQUIT",
          "command_all": "STOPSIGNAL SIGQUIT",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "CMD",
          "time": "2023-02-10T23:06:47Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_snippet": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_all": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-02-10T23:07:12Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "NJS_VERSION=0.7.9",
          "command_snippet": "ENV NJS_VERSION=0.7.9",
          "command_all": "ENV NJS_VERSION=0.7.9",
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-02-10T23:07:17Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 28237867,
          "size_human": "28 MB",
          "command_snippet": "RUN set -x && \\\n\tapkArch=\"$(cat /etc/apk/arc...",
          "command_all": "RUN set -x && \\\n\tapkArch=\"$(cat /etc/apk/arch)\" && \\\n\tnginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \" && \\\n\tapk add --no-cache --virtual .checksum-deps         openssl && \\\n\tcase \"$apkArch\" in         x86_64|aarch64)             set -x && \\\n\tKEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\" && \\\n\twget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub && \\\n\tif echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi && \\\n\tapk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x && \\\n\ttempDir=\"$(mktemp -d)\" && \\\n\tchown nobody:nobody $tempDir && \\\n\tapk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils && \\\n\tsu nobody -s /bin/sh -c \"                 export HOME=${tempDir} && \\\n\tcd ${tempDir} && \\\n\tcurl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tPKGOSSCHECKSUM=\\\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\" && \\\n\tif [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi && \\\n\ttar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tcd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE} && \\\n\tcd alpine && \\\n\tmake module-geoip module-image-filter module-njs module-xslt && \\\n\tapk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk && \\\n\tabuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \" && \\\n\tcp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ && \\\n\tapk del .build-deps && \\\n\tapk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac && \\\n\tapk del .checksum-deps && \\\n\tif [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi && \\\n\tif [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi && \\\n\tif [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi && \\\n\tapk add --no-cache curl ca-certificates",
          "system_commands": [
            "set -x",
            "apkArch=\"$(cat /etc/apk/arch)\"",
            "nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"",
            "apk add --no-cache --virtual .checksum-deps         openssl",
            "case \"$apkArch\" in         x86_64|aarch64)             set -x",
            "KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"",
            "wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub",
            "if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi",
            "apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x",
            "tempDir=\"$(mktemp -d)\"",
            "chown nobody:nobody $tempDir",
            "apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils",
            "su nobody -s /bin/sh -c \"                 export HOME=${tempDir}",
            "cd ${tempDir}",
            "curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "PKGOSSCHECKSUM=\"52a80f6c3b3914462f8a0b2fbadea950bcd79c1bd528386aff4c28d5a80c6920d783575a061a47b60fea800eef66bf5a0178a137ea51c37277fe9c2779715990 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\"",
            "if [ \"$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\" = \"$PKGOSSCHECKSUM\" ]; then                     echo \"pkg-oss tarball checksum verification succeeded!\";                 else                     echo \"pkg-oss tarball checksum verification failed!\";                     exit 1;                 fi",
            "tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}",
            "cd alpine",
            "make module-geoip module-image-filter module-njs module-xslt",
            "apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk",
            "abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"",
            "cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/",
            "apk del .build-deps",
            "apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac",
            "apk del .checksum-deps",
            "if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi",
            "if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi",
            "if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi",
            "apk add --no-cache curl ca-certificates"
          ],
          "inst_set_time_bucket": "2023-02-11T00:00:00+01:00",
          "inst_set_time_index": 1
        },
        {
          "type": "RUN",
          "time": "2023-02-12T01:32:35Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN rm /etc/nginx/conf.d/*",
          "command_all": "RUN rm /etc/nginx/conf.d/*",
          "system_commands": [
            "rm /etc/nginx/conf.d/*"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-02-12T02:30:00+01:00",
          "inst_set_time_index": 2
        },
        {
          "type": "ADD",
          "time": "2023-02-12T01:32:35Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 392,
          "size_human": "392 B",
          "params": "hello.conf /etc/nginx/conf.d/",
          "command_snippet": "ADD hello.conf /etc/nginx/conf.d/",
          "command_all": "ADD hello.conf /etc/nginx/conf.d/",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-02-12T02:30:00+01:00",
          "inst_set_time_index": 2
        },
        {
          "type": "ADD",
          "time": "2023-02-12T01:32:35Z",
          "is_last_instruction": true,
          "is_nop": false,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 7194,
          "size_human": "7.2 kB",
          "params": "index.html /usr/share/nginx/html/",
          "command_snippet": "ADD index.html /usr/share/nginx/html/",
          "command_all": "ADD index.html /usr/share/nginx/html/",
          "comment": "buildkit.dockerfile.v0",
          "raw_tags": [
            "nginxdemos/hello:latest"
          ],
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2023-02-12T02:30:00+01:00",
          "inst_set_time_index": 2
        }
      ]
    }
  ],
  "image_created": false,
  "image_build_engine": ""
}
